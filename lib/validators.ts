import { z } from "zod";

// Valida√ß√£o personalizada de WhatsApp
// Aceita n√∫meros nacionais e internacionais de qualquer pa√≠s
const validateWhatsApp = (phone: string): boolean => {
  const digitsOnly = phone.replace(/\D/g, ""); // Remove tudo que n√£o √© d√≠gito

  // Aceita formatos:
  // - Nacional (Brasil): 10-11 d√≠gitos (ex: 11987654321)
  // - Internacional: 7-15 d√≠gitos (padr√£o E.164 permite at√© 15)
  //   - +1 (EUA/Canad√°): 11 d√≠gitos (1 + 10)
  //   - +44 (UK): 12-13 d√≠gitos (44 + 10-11)
  //   - +55 (Brasil): 12-13 d√≠gitos (55 + 10-11)
  //   - +351 (Portugal): 12 d√≠gitos (351 + 9)
  //   - +34 (Espanha): 11 d√≠gitos (34 + 9)
  //   - etc.
  return /^[0-9]{7,15}$/.test(digitsOnly);
};

export const leadFormSchema = z.object({
  name: z
    .string()
    .min(2, "Nome deve ter pelo menos 2 caracteres")
    .max(100, "Nome muito longo"),
  email: z
    .string()
    .email("E-mail inv√°lido")
    .min(1, "E-mail √© obrigat√≥rio para garantir que n√£o perderemos nosso contato com voc√™ üòâ"),
  phone: z
    .string()
    .min(1, "Por favor, forne√ßa seu n√∫mero de WhatsApp")
    .refine(validateWhatsApp, {
      message: "WhatsApp inv√°lido. Digite com c√≥digo do pa√≠s: +55 11 98765-4321",
    }),
  message: z
    .string()
    .max(1000, "Mensagem muito longa")
    .optional(),
});

export type LeadFormData = z.infer<typeof leadFormSchema>;

// Fun√ß√£o auxiliar para normalizar WhatsApp (remove caracteres especiais)
// IMPORTANTE: Mant√©m o n√∫mero COMPLETO, incluindo c√≥digo do pa√≠s se houver
export const normalizeWhatsApp = (phone: string): string => {
  const digits = phone.replace(/\D/g, "");

  // Retorna apenas os d√≠gitos, mantendo c√≥digo do pa√≠s
  // Isso permite armazenar n√∫meros internacionais completos
  return digits;
};
